# Generated by Django 5.1.3 on 2024-11-29 00:54

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='카테고리')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
            ],
            options={
                'verbose_name': '카테고리',
                'verbose_name_plural': '카테고리 목록',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('name', models.CharField(max_length=5)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postal_code', models.CharField(max_length=6, verbose_name='우편번호')),
                ('sido', models.CharField(max_length=100, verbose_name='시도')),
                ('sigungu', models.CharField(max_length=100, verbose_name='시군구')),
                ('eup_myeon_dong', models.CharField(max_length=100, verbose_name='읍면동')),
                ('detail_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='상세주소')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='등록일')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '주소',
                'verbose_name_plural': '주소 목록',
                'ordering': ['sido', 'sigungu', 'eup_myeon_dong'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='상품명')),
                ('content', models.TextField(verbose_name='상품설명')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='상품 가격')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='등록일')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='업데이트날짜')),
                ('status', models.CharField(choices=[('판매 중', '판매 중'), ('판매완료', '판매완료')], max_length=50, verbose_name='판매상태')),
                ('shipping_included', models.BooleanField(default=False, verbose_name='배송비 포함 여부')),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='배송비')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='silentmarket.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '상품',
                'verbose_name_plural': '상품 목록',
                'ordering': ['-create_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='결제 금액')),
                ('payment_date', models.DateTimeField(auto_now_add=True, verbose_name='결제 일시')),
                ('status', models.CharField(choices=[('결재 대기중', '결재 대기중'), ('결재완료', '결재완료')], default='결재 대기중', max_length=50, verbose_name='결제 상태')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sold_products', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='구매자')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='silentmarket.product')),
            ],
            options={
                'verbose_name': '결제',
                'verbose_name_plural': '결제 내역',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='ProductImg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='silentmarket.product')),
            ],
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['-create_at'], name='silentmarke_create__3f41a4_idx'),
        ),
    ]
